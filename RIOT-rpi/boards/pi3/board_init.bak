/* Constants required to setup the VIC for the tick ISR. */
#define portTIMER_BASE                    		( (unsigned long ) 0x3f00B400 )

typedef struct _BCM2835_TIMER_REGS {
  unsigned long LOD;
  unsigned long VAL;
  unsigned long CTL;
  unsigned long CLI;
  unsigned long RIS;
  unsigned long MIS;
  unsigned long RLD;
  unsigned long DIV;
  unsigned long CNT;
} BCM2835_TIMER_REGS;

static volatile BCM2835_TIMER_REGS * const pRegs = (BCM2835_TIMER_REGS *) (portTIMER_BASE);

void bl_init_ports(void){
  InitInterruptController();
}

void bl_init_clks(void){
  unsigned long ulCompareMatch;

  /* Calculate the match value required for our wanted tick rate. */
  ulCompareMatch = 1000000 / configTICK_RATE_HZ;

  /* Protect against divide by zero.  Using an if() statement still results
     in a warning - hence the #if. */


  //DisableInterrupts();

  pRegs->CTL = 0x003E0000;
  pRegs->LOD = 1000 - 1;
  pRegs->RLD = 1000 - 1;
  pRegs->DIV = portTIMER_PRESCALE;
  pRegs->CLI = 0;
  pRegs->CTL = 0x003E00A2;

  RegisterInterrupt(64, vTickISR, NULL);

  EnableInterrupt(64);

  EnableInterrupts();

}
